/**
 * better-i18n-plugin: Internationalization plugin for better-dom
 * @version 2.0.0-rc.1 Mon, 11 Apr 2016 10:16:21 GMT
 * @link https://github.com/chemerisuk/better-emmet-plugin
 * @copyright 2016 Maksim Chemerisuk
 * @license MIT
 */
function _classCallCheck(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}!function(n){"use strict";function t(n,t){var r=arguments.length<=2||void 0===arguments[2]?0:arguments[2];return n.replace(/%s/g,function(n){return t[r++]||n})}var r=[],a=[],i=n.get("documentElement"),o=function(){function n(i,o){var e=this;_classCallCheck(this,n),a.forEach(function(n,a){var s=r[a][i];s&&(e[n]=o?t(s,o):s)}),this._=o?t(i,o):i}return n.prototype.toString=function(){var n=this;return Object.keys(this).sort(function(n){return"_"===n?1:-1}).map(function(t){return'<span lang="'+t+'">'+n[t]+"</span>"}).join("")},n.prototype.toLocaleString=function(n){return this[n||i.lang]||this._},n.prototype.valueOf=function(){return"<span>"+this.toString()+"</span>"},n}();n.importStrings=function(t,i,o){if("string"!=typeof t)throw new TypeError("lang argument must be a string");var e=a.indexOf(t),s=r[e];-1===e&&(e=a.push(t)-1,r[e]=s={},n.importStyles('span[lang="'+t+'"]',"display:none"),n.importStyles(":lang("+t+') > span[lang="'+t+'"]',"display:inline !important"),n.importStyles(":lang("+t+') > span[lang="'+t+'"] ~ span[lang]',"display:none")),"string"==typeof i?s[i]=o:Object.keys(i).forEach(function(n){s[n]=i[n]})},n.__=function(n){for(var t=arguments.length,r=Array(t>1?t-1:0),a=1;t>a;a++)r[a-1]=arguments[a];return Array.isArray(n)?n.map(function(n){return new o(n,r)}):new o(n,r)},n.__.esliteral=function(n){for(var t=arguments.length,r=Array(t>1?t-1:0),a=1;t>a;a++)r[a-1]=arguments[a];return new o(n.join("%s"),r).toLocaleString()}}(window.DOM);